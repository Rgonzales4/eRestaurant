    <!--<% if (messages.error) { %> <%= messages.error%> <% } %>-->

  <!--var date1 = Date.now
  var date2 = req.body.bookingDate
  else if (req.body.bookingDate < date1){
    res.render('createBooking', {
      successMessage: '',
      failMessage: 'Please input a valid date',
      req: req,
      booking: booking,
    });
  } 

-->  

<!-- function checkAuthenticated(req, res, next) {
  if (req.isAuthenticated()) {
    return next();
  }
  res.redirect('/login');
}

router.put('/:id', (req, res) => {

})

router.delete('/:bookingID', async (req, res) => {
  const deleteBookingID = req.params.bookingID;
  await Booking.findOneAndDelete(deleteBookingID); 
  res.redirect('/bookings');
  console.log('Booking ' + deleteBookingID + ' has been deleted');
})

function checkIfEmpty(){
  Booking.countDocuments(function (err, count) {
    if (!err && count === 0) {
        return true
    }
    else {return false}
})
}

async function generateNewID() {
  if (checkIfEmpty == true){
    let newID = 1
    return newID
  }
  else {
    let newestBooking = await Booking.findOne().sort({bookingID: -1})
    return newestBooking.then(data => {data.bookingID + 1})
  }

}


-->